plugins {
	id "fabric-loom" version "0.9-SNAPSHOT"
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = "${project.archives_base_name}-fabric"
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
	modApi("net.fabricmc:fabric-loader:${project.loader_version}")

	modImplementation(fabricApi.module("fabric-object-builder-api-v1", project.fabric_api_version));
	include(fabricApi.module("fabric-api-base", project.fabric_api_version));
	include(fabricApi.module("fabric-object-builder-api-v1", project.fabric_api_version));
	include(fabricApi.module("fabric-resource-loader-v0", project.fabric_api_version));
	include(fabricApi.module("fabric-tag-extensions-v0", project.fabric_api_version));
	include(fabricApi.module("fabric-tool-attribute-api-v1", project.fabric_api_version));
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}

	exclude "**/*.svg"
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	def targetVersion = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	}
}
